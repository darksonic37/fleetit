version: '3'

services:
  zookeeper-1:
    image: confluentinc/cp-zookeeper:latest
    deploy:
      restart_policy:
        delay: 5s
        condition: on-failure
    environment:
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_CLIENT_PORT: 22181
      ZOOKEEPER_TICK_TIME: 2000
      ZOOKEEPER_INIT_LIMIT: 5
      ZOOKEEPER_SYNC_LIMIT: 2
      ZOOKEEPER_SERVERS: zookeeper-1:22888:23888

  kafka-1:
    image: confluentinc/cp-kafka:latest
    deploy:
      restart_policy:
        delay: 5s
        condition: on-failure
    depends_on:
      - zookeeper-1
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper-1:22181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-1:19092

  sensor:
    image: fleetit-sensor
    deploy:
      replicas: 5
      restart_policy:
        delay: 5s
        condition: on-failure
    environment:
      KAFKA_CLUSTER: "kafka-1:19092"
    depends_on:
      - kafka-1

  websocket:
    image: fleetit-websocket
    deploy:
      restart_policy:
        delay: 5s
        condition: on-failure
    ports:
      - "9999:9999"
    environment:
      KAFKA_CLUSTER: "kafka-1:19092"
    depends_on:
      - kafka-1

  client:
    image: fleetit-client
    deploy:
      restart_policy:
        delay: 5s
        condition: on-failure
    ports:
      - "80:80"
    depends_on:
      - websocket

  postgres:
    image: fleetit-postgres
    deploy:
      restart_policy:
        delay: 5s
        condition: on-failure
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: "root"
      POSTGRES_PASSWORD: "demo1234"
      POSTGRES_DB: "fleetit"

  api:
    image: fleetit-api
    deploy:
      restart_policy:
        delay: 5s
        condition: on-failure
    ports:
      - "8080:8080"
    environment:
      POSTGRES_USER: "root"
      POSTGRES_PASSWORD: "demo1234"
      POSTGRES_DB: "fleetit"
      POSTGRES_HOST: "postgres"
    depends_on:
      - postgres

  alerts:
    image: fleetit-alerts
    deploy:
      restart_policy:
        delay: 5s
        condition: on-failure
    environment:
      KAFKA_CLUSTER: "kafka-1:19092"
      POSTGRES_USER: "root"
      POSTGRES_PASSWORD: "demo1234"
      POSTGRES_DB: "fleetit"
      POSTGRES_HOST: "postgres"
    depends_on:
      - kafka-1

  logstash:
    image: fleetit-logstash
    deploy:
      restart_policy:
        delay: 5s
        condition: on-failure
    volumes:
      - ./monitoring/logstash/config/logstash.yml:/usr/share/logstash/config/logstash.yml:ro
      - ./monitoring/logstash/pipeline:/usr/share/logstash/pipeline:ro
    ports:
      - "5000:5000"
    environment:
      LS_JAVA_OPTS: "-Xmx256m -Xms256m"

  logspout:
    image: bekt/logspout-logstash
    deploy:
      restart_policy:
        delay: 5s
        condition: on-failure
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock
    environment:
      ROUTE_URIS: logstash://logstash:5000
    depends_on:
      - logstash

  elasticsearch:
    image: fleetit-elasticsearch
    deploy:
      restart_policy:
        delay: 5s
        condition: on-failure
    volumes:
      - ./monitoring/elasticsearch/config/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml:ro
    ports:
      - "9200:9200"
      - "9300:9300"
    environment:
      ES_JAVA_OPTS: "-Xmx256m -Xms256m"

  metricbeat:
    image: fleetit-metricbeat
    deploy:
      restart_policy:
        delay: 5s
        condition: on-failure
    volumes:
       - ./monitoring/metricbeat/config/metricbeat.yml:/usr/share/metricbeat/metricbeat.yml:ro
       - /var/run/docker.sock:/tmp/docker.sock
    depends_on:
      - elasticsearch

  kibana:
    image: fleetit-kibana
    deploy:
      restart_policy:
        delay: 5s
        condition: on-failure
    volumes:
      - ./monitoring/kibana/config/:/usr/share/kibana/config:ro
    ports:
      - "5601:5601"
    depends_on:
      - elasticsearch
