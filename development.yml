version: '3'

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    deploy:
      restart_policy:
        delay: 5s
        condition: any
    environment:
      ZOOKEEPER_CLIENT_PORT: 22181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:latest
    deploy:
      restart_policy:
        delay: 5s
        condition: any
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:22181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:19092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  sensor:
    image: fleetit-sensor
    deploy:
      replicas: 5
      restart_policy:
        delay: 15s
        condition: any
    environment:
      KAFKA_CLUSTER: "kafka:19092"

  websocket:
    image: fleetit-websocket
    deploy:
      restart_policy:
        delay: 5s
        condition: any
    ports:
      - "9999:9999"
    environment:
      KAFKA_CLUSTER: "kafka:19092"

  client:
    image: fleetit-client
    deploy:
      restart_policy:
        delay: 5s
        condition: any
    ports:
      - "80:80"
    environment:
        NODE_ENV: "development"

  postgres:
    image: fleetit-postgres
    deploy:
      restart_policy:
        delay: 5s
        condition: any
    environment:
      POSTGRES_USER: "root"
      POSTGRES_PASSWORD: "demo1234"
      POSTGRES_DB: "fleetit"

  api:
    image: fleetit-api
    deploy:
      restart_policy:
        delay: 5s
        condition: any
    ports:
      - "8080:8080"
    environment:
      POSTGRES_USER: "root"
      POSTGRES_PASSWORD: "demo1234"
      POSTGRES_DB: "fleetit"
      POSTGRES_HOST: "postgres"

  alerts:
    image: fleetit-alerts
    deploy:
      restart_policy:
        delay: 5s
        condition: any
    environment:
      KAFKA_CLUSTER: "kafka:19092"
      POSTGRES_USER: "root"
      POSTGRES_PASSWORD: "demo1234"
      POSTGRES_DB: "fleetit"
      POSTGRES_HOST: "postgres"

  logstash:
    image: fleetit-logstash
    deploy:
      restart_policy:
        delay: 5s
        condition: any
    volumes:
      - ./monitoring/logstash/config/logstash.yml:/usr/share/logstash/config/logstash.yml:ro
      - ./monitoring/logstash/pipeline:/usr/share/logstash/pipeline:ro
    ports:
      - "5000:5000"
    environment:
      LS_JAVA_OPTS: "-Xmx256m -Xms256m"

  elasticsearch:
    image: fleetit-elasticsearch
    deploy:
      restart_policy:
        delay: 5s
        condition: any
    volumes:
      - ./monitoring/elasticsearch/config/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml:ro
    ports:
      - "9200:9200"
      - "9300:9300"
    environment:
      ES_JAVA_OPTS: "-Xmx256m -Xms256m"

  metricbeat:
    image: fleetit-metricbeat
    user: root
    deploy:
      restart_policy:
        delay: 5s
        condition: any
    volumes:
       - ./monitoring/metricbeat/config/metricbeat.yml:/usr/share/metricbeat/metricbeat.yml:ro
       - /var/run/docker.sock:/tmp/docker.sock

      #  filebeat:
      #    image: fleetit-filebeat
      #    deploy:
      #      restart_policy:
      #        delay: 5s
      #        condition: any
      #    volumes:
      #       - ./monitoring/filebeat/config/filebeat.yml:/usr/share/filebeat/filebeat.yml:ro

  kibana:
    image: fleetit-kibana
    deploy:
      restart_policy:
        delay: 5s
        condition: any
    volumes:
      - ./monitoring/kibana/config/:/usr/share/kibana/config:ro
    ports:
      - "5601:5601"

  jenkins:
    image: fleetit-jenkins
    user: root
    deploy:
      restart_policy:
        delay: 5s
        condition: any
    volumes:
      - ./jenkins-data:/var/jenkins_home
      - /var/run/docker.sock:/var/run/docker.sock
    ports:
      - "8082:8080"
      - "50000:50000"
